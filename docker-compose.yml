version: '3'

services:
    nginx:
        image: nginx:1.18
        container_name: docker_nginx-1.18
        restart: always
        ports:
            - "80:80"
            - "443:443"
        environment:
            TZ: 'Asia/Shanghai'
        volumes:
            - ./html:/usr/share/nginx/html/
            - /Users/dengqihua/WebSite:/opt/webroot/    # 项目部署的实际目录，需要根据自己的环境修改
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/cert:/etc/nginx/cert/
            - ./nginx/log:/var/log/nginx/
        networks:
            local-network:
                ipv4_address: 10.16.237.10
            public-network:
                ipv4_address: 10.16.238.10
        dns:
            - 8.8.8.8
        depends_on:
            - php-fpm-7.2
    
    php-fpm-7.1:
        image: php-fpm:7.1
        container_name: docker_php-fpm-7.1
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-7.1.php
        environment:
            TZ: 'Asia/Shanghai'
        volumes:
            - ./html:/usr/share/nginx/html/
            - /Users/dengqihua/WebSite:/opt/webroot/    # 项目部署的实际目录，需要根据自己的环境修改
            - ./php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
            - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./php-fpm/log/:/var/log/php-fpm/
        networks:
            local-network:
                ipv4_address: 10.16.237.20
        dns:
            - 8.8.8.8
        depends_on:
            - mysql
            - redis
    
    php-fpm-7.2:
        image: php-fpm:7.2
        container_name: docker_php-fpm-7.2
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-7.2.php
        environment:
            TZ: 'Asia/Shanghai'
        volumes:
            - ./html:/usr/share/nginx/html/
            - /Users/dengqihua/WebSite:/opt/webroot/    # 项目部署的实际目录，需要根据自己的环境修改
            - ./php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
            - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./php-fpm/log/:/var/log/php-fpm/
        networks:
            local-network:
                ipv4_address: 10.16.237.21
        dns:
            - 8.8.8.8
        depends_on:
            - mysql
            - redis
    
    php-fpm-7.3:
        image: php-fpm:7.3
        container_name: docker_php-fpm-7.3
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-7.3.php
        environment:
            TZ: 'Asia/Shanghai'
        volumes:
            - ./html:/usr/share/nginx/html/
            - /Users/dengqihua/WebSite:/opt/webroot/    # 项目部署的实际目录，需要根据自己的环境修改
            - ./php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
            - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./php-fpm/log/:/var/log/php-fpm/
        networks:
            local-network:
                ipv4_address: 10.16.237.22
        dns:
            - 8.8.8.8
        depends_on:
            - mysql
            - redis

    php-fpm-7.4:
        image: php-fpm:7.4
        container_name: docker_php-fpm-7.4
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-7.4.php
        environment:
            TZ: 'Asia/Shanghai'
        volumes:
            - ./html:/usr/share/nginx/html/
            - /Users/dengqihua/WebSite:/opt/webroot/    # 项目部署的实际目录，需要根据自己的环境修改
            - ./php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
            - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./php-fpm/log/:/var/log/php-fpm/
        networks:
            local-network:
                ipv4_address: 10.16.237.23
        dns:
            - 8.8.8.8
        depends_on:
            - mysql
            - redis
    
    mysql:
        image: mysql:5.7
        container_name: docker_mysql-5.7
        restart: always
        ports:
            - "3306:3306"
        volumes:
            - mysql-data:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/my.cnf
            - ./mysql/log/:/var/log/mysql/
        environment:
            TZ: 'Asia/Shanghai'
            MYSQL_ROOT_PASSWORD: 123456
        command: [ 'mysqld', '--character-set-server=utf8' ]
        networks:
            local-network:
                ipv4_address: 10.16.237.30
        dns:
            - 8.8.8.8
    
    redis:
        image: redis:5.0
        container_name: docker_redis-5.0
        restart: always
        volumes:
            - redis-data:/data
            - ./redis/redis.conf:/etc/redis.conf
        networks:
            local-network:
                ipv4_address: 10.16.237.40
        ports:
            - "6379:6379"
        command: [ "redis-server", "/etc/redis.conf" ]
    
    mongo:
        image: mongo:4.0
        container_name: docker_mongo-4.0
        restart: always
        volumes:
            - mongodb-data:/data/db
        ports:
            - "27017:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: 123456
        networks:
            local-network:
                ipv4_address: 10.16.237.50
            public-network:
                ipv4_address: 10.16.238.50

volumes:
    mysql-data:
    redis-data:
    mongodb-data:

networks:
    public-network:
        driver: bridge
        ipam:
            driver: default
            config:
                -   subnet: 10.16.238.0/24
    local-network:
        driver: bridge
        ipam:
            driver: default
            config:
                -   subnet: 10.16.237.0/24

